/* 
 * ArqueoPUCP DB API
 *
 * API para obtener y actualizar datos de jugadores.
 *
 * OpenAPI spec version: 0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DefaultApiTests
    {
        private DefaultApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DefaultApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DefaultApi
            //Assert.IsInstanceOfType(typeof(DefaultApi), instance, "instance is a DefaultApi");
        }

        
        /// <summary>
        /// Test DeleteArtifact
        /// </summary>
        [Test]
        public void DeleteArtifactTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteArtifact(id);
            
        }
        
        /// <summary>
        /// Test DeleteUser
        /// </summary>
        [Test]
        public void DeleteUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteUser(id);
            
        }
        
        /// <summary>
        /// Test GetArtifact
        /// </summary>
        [Test]
        public void GetArtifactTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string> fields = null;
            //instance.GetArtifact(id, fields);
            
        }
        
        /// <summary>
        /// Test GetArtifacts
        /// </summary>
        [Test]
        public void GetArtifactsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetArtifacts();
            
        }
        
        /// <summary>
        /// Test GetUserAwards
        /// </summary>
        [Test]
        public void GetUserAwardsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string> fields = null;
            //instance.GetUserAwards(id, fields);
            
        }
        
        /// <summary>
        /// Test GetUserCollectedItems
        /// </summary>
        [Test]
        public void GetUserCollectedItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //bool? types = null;
            //instance.GetUserCollectedItems(id, types);
            
        }
        
        /// <summary>
        /// Test GetUserPersonalInfo
        /// </summary>
        [Test]
        public void GetUserPersonalInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string> fields = null;
            //instance.GetUserPersonalInfo(id, fields);
            
        }
        
        /// <summary>
        /// Test GetUsers
        /// </summary>
        [Test]
        public void GetUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetUsers();
            
        }
        
        /// <summary>
        /// Test PostArtifacts
        /// </summary>
        [Test]
        public void PostArtifactsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string type = null;
            //decimal? latitude = null;
            //decimal? longitude = null;
            //string path = null;
            //instance.PostArtifacts(type, latitude, longitude, path);
            
        }
        
        /// <summary>
        /// Test PostUserLogin
        /// </summary>
        [Test]
        public void PostUserLoginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string nickname = null;
            //string password = null;
            //instance.PostUserLogin(nickname, password);
            
        }
        
        /// <summary>
        /// Test PostUsers
        /// </summary>
        [Test]
        public void PostUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string nickname = null;
            //string email = null;
            //string password = null;
            //string gender = null;
            //instance.PostUsers(nickname, email, password, gender);
            
        }
        
        /// <summary>
        /// Test PutUserAwards
        /// </summary>
        [Test]
        public void PutUserAwardsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //int? digQuantity = null;
            //int? gatherQuantity = null;
            //int? searchQuantity = null;
            //bool? increase = null;
            //instance.PutUserAwards(id, digQuantity, gatherQuantity, searchQuantity, increase);
            
        }
        
        /// <summary>
        /// Test PutUserCollectedItems
        /// </summary>
        [Test]
        public void PutUserCollectedItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //int? value = null;
            //string artifactId = null;
            //bool? increase = null;
            //instance.PutUserCollectedItems(id, value, artifactId, increase);
            
        }
        
        /// <summary>
        /// Test PutUserPersonalInfo
        /// </summary>
        [Test]
        public void PutUserPersonalInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //bool? active = null;
            //string email = null;
            //string gender = null;
            //string isTutorialDone = null;
            //int? level = null;
            //int? experience = null;
            //string nickname = null;
            //instance.PutUserPersonalInfo(id, active, email, gender, isTutorialDone, level, experience, nickname);
            
        }
        
    }

}
